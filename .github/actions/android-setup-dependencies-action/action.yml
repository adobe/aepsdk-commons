#
# Copyright 2024 Adobe. All rights reserved.
# This file is licensed to you under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
# OF ANY KIND, either express or implied. See the License for the specific language
# governing permissions and limitations under the License.
#

name: Setup Dependencies (Android)
description: Checkout and install dependencies

inputs:
  android-api-level:
    description: 'The Android API level to use for testing.'
    type: string
    default: ''
outputs:
  java-home: ${{ steps.set-java-home.outputs.java-home }}

runs:
  using: "composite"
  steps:
    - name: Set up Java
      uses: actions/setup-java@v4.2.2
      with:
        distribution: 'zulu'
        java-version: 17
    - name: Set JAVA_HOME output
      id: set-java-home
      run: echo "java-home=${JAVA_HOME}" >> $GITHUB_OUTPUT
    # This is to help reduce Android emulator boot up flakiness issues:
    # See: https://github.com/ReactiveCircus/android-emulator-runner/issues/324#issuecomment-2009351180
    - name: Delete unnecessary tools ðŸ”§
      uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
      with:
        android: false # Don't remove Android tools
        tool-cache: true # Remove image tool cache - rm -rf "$AGENT_TOOLSDIRECTORY"
        dotnet: true # rm -rf /usr/share/dotnet
        haskell: true # rm -rf /opt/ghc...
        swap-storage: true # rm -f /mnt/swapfile (4GiB)
        docker-images: false # Takes 16s, enable if needed in the future
        large-packages: false # includes google-cloud-sdk and it's slow
    # The Android emulator requires Kernel-based Virtual Machine (KVM) access to run efficiently. 
    # This step ensures that the KVM is accessible with the proper permissions across all users.
    - name: Enable KVM group permissions
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        ls /dev/kvm
      shell: bash

    - name: Gradle cache
      uses: gradle/actions/setup-gradle@v4.1.0

    - name: AVD cache
      if: ${{ inputs.android-api-level != '' }}
      uses: actions/cache@v4.1.2
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ inputs.android-api-level }}
    
    # Note that the AVD configurations must exactly match what's used in the test step, otherwise the cache will not be used.
    - name: create AVD and generate snapshot for caching
      if: ${{ steps.avd-cache.outputs.cache-hit != 'true' && inputs.android-api-level != '' }}
      uses: reactivecircus/android-emulator-runner@f0d1ed2dcad93c7479e8b2f2226c83af54494915 # v2.32.0
      with:
        api-level: ${{ inputs.android-api-level }}
        arch: x86_64
        disk-size: 6000M
        heap-size: 600M
        force-avd-creation: false
        emulator-options: -no-metrics -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: echo "Generated AVD snapshot for caching."
    
    - name: Save AVD cache
      if: ${{ steps.avd-cache.outputs.cache-hit != 'true' && inputs.android-api-level != '' }}
      uses: actions/cache/save@v4.1.2
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ inputs.android-api-level }}
