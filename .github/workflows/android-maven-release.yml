name: Publish Release (Android)

on: 
  workflow_call:
    inputs:
      tag:
        description: 'tag/version'
        required: true        

      action_tag:
        description: 'Create tag? ("no" to skip)'
        required: true
        default: 'yes'
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Set up Java
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v4.0.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      
      - name: Checkout scripts Directory from aepsdk-commons
        uses: actions/checkout@v4.1.7
        with:
          repository: timkimadobe/aepsdk-commons
          ref: android-reusable-workflows
          path: .github/aepsdk-commons
          sparse-checkout: 'scripts' # Only checkout the scripts directory

      - name: Update Libraries
        run: |
          bash .github/aepsdk-commons/scripts/android-versions.sh -v "${{ inputs.version }}" -d "${{ inputs.dependencies }}" -p "${{ inputs.constants-paths }}" -g "${{ inputs.gradle-properties-path }}" -u
      
      - name: Verify version        
        run: |
          set -eo pipefail
          echo Release version: ${{ github.event.inputs.tag }}
          (./scripts/version.sh -v ${{ github.event.inputs.tag }})

      - name: Remove called repository
        run: rm -rf .github/aepsdk-commons

      - name: Create GH Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        if: ${{ github.event.inputs.action_tag == 'yes' }}
        with:
          name: v${{ github.event.inputs.tag }}
          tag: v${{ github.event.inputs.tag }}
          version: v${{ github.event.inputs.tag }}
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
    
      - name: Import GPG key
        env:
          GPG_SECRET_KEYS: ${{ secrets.GPG_SECRET_KEYS }}
          GPG_OWNERTRUST: ${{ secrets.GPG_OWNERTRUST }}
        run: |
          echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch --yes
          echo $GPG_OWNERTRUST | base64 --decode | gpg --import-ownertrust --no-tty --batch --yes

      - name: Publish to Maven Central Repository
        run: make ci-publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}