#
# Copyright 2024 Adobe. All rights reserved.
# This file is licensed to you under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
# OF ANY KIND, either express or implied. See the License for the specific language
# governing permissions and limitations under the License.
#

name: Release (iOS)

# Currently this workflow relies on two secrets:
# - GITHUB_TOKEN: Required for creating a release on GitHub
# - COCOAPODS_TRUNK_TOKEN: Required for pushing a pod to Cocoapods
# These can be passed using the `secrets: inherit` option in the caller workflow file.

on:
  workflow_call:
    inputs:
      tag:
        description: 'Existing tag (version) being released (ex: 5.0.1)'
        required: true
        type: string

      run_full_release:
        description: 'Run full release process: SPM and podspec validation, build artifacts, GH release (`false` to only check podspec version)'
        required: true
        default: true
        type: boolean

      release_pod:
        description: 'Release to Cocoapods (`false` to skip)'
        required: true
        default: true
        type: boolean

      library_name:
        description: 'Library name to be released (ex: AEPEdge)'
        required: true
        type: string
      
      # Makefile environment variables
      scheme_name_xcframework:
        description: 'Scheme name for XCFramework (ex: AEPEdgeXCF)'
        required: true
        type: string

      test_app_ios_scheme:
        description: 'iOS Test App Scheme (ex: TestAppiOS)'
        required: true
        type: string

      test_app_tvos_scheme:
        description: 'tvOS Test App Scheme (ex: TestApptvOS)'
        required: true
        type: string

jobs:
  release:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4.1.7
      with:
        ref: main
    
    - name: Set up Xcode Version
      uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd # v1.6.0
      with:
        xcode-version: '15.0.1'

    - name: Install Cocoapods
      run: gem install cocoapods

    - name: Install XcodeGen
      run: brew install xcodegen

    - name: Check Version in Podspec
      run: |
        set -eo pipefail
        echo Target version: ${{ inputs.tag }}
        make check-version VERSION=${{ inputs.tag }}

    - name: Pod repo update
      run: | 
        pod repo update

    - name: SPM Integration Test
      if: ${{ inputs.run_full_release }}
      run: |
        set -eo pipefail
        echo SPM integration test starts:
        make test-SPM-integration

    - name: Podspec File Verification
      if: ${{ inputs.run_full_release }}
      run: |
        set -eo pipefail
        echo podspec file verification starts:
        make test-podspec
        
    - name: Build Artifacts
      if: ${{ inputs.run_full_release == 'yes' }}
      # env:
      #   EXTENSION_NAME: ${{ inputs.library_name }} # dont think these are needed since they are already in the makefile that is local to the repo
      #   SCHEME_NAME_XCFRAMEWORK: ${{ inputs.scheme_name_xcframework }}
      #   TEST_APP_IOS_SCHEME: ${{ inputs.test_app_ios_scheme }}
      #   TEST_APP_TVOS_SCHEME: ${{ inputs.test_app_tvos_scheme }}
      run: |
        make archive
        make zip
    
    - name: Create GH Release and Upload Asset - ${{ inputs.library_name }}
      if: ${{ inputs.run_full_release }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ inputs.tag }} \
          --verify-tag \
          --generate-notes \
          --title "v${{ inputs.tag }}" \
          ./build/${{ inputs.library_name }}.xcframework.zip#${{ inputs.library_name }}-${{ inputs.tag }}.xcframework.zip

    - name: Publish Pods - ${{ inputs.library_name }}
      if: ${{ inputs.release_pod }}
      run: |
        set -eo pipefail
        pod trunk push ${{ inputs.library_name }}.podspec --allow-warnings --synchronous
        pod repo update
      env:
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
