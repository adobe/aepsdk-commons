name: Build and Test (iOS)

on:
  workflow_call:
    inputs:
      ios-device-names:
        description: |
          The iOS device names to use for testing. Must be formatted as a valid JSON array string.
          Example: '["iPhone 15", "iPhone 15 Pro"]'
            - Notice the use of single quotes to wrap the JSON array string, and double quotes for each array element.
        type: string
        default: '["iPhone 15"]'
      ios-versions:
        description: |
          The iOS versions to use for testing. Must be formatted as a valid JSON array string.
          Example: '["18.0", "18.1"]'
            - Notice the use of single quotes to wrap the JSON array string, and double quotes for each array element.
        type: string
        default: '["18.0"]'
      tvos-device-names:
        description: |
          The tvOS device names to use for testing. Must be formatted as a valid JSON array string.
          Example: '["Apple TV 4K (3rd generation)", "Apple TV"]'
            - Notice the use of single quotes to wrap the JSON array string, and double quotes for each array element.
        type: string
        default: '["Apple TV"]'
      tvos-versions:
        description: |
          The tvOS versions to use for testing. Must be formatted as a valid JSON array string.
          Example: '["18.0", "18.1"]'
            - Notice the use of single quotes to wrap the JSON array string, and double quotes for each array element.
        type: string
        default: '["18.0"]'
      # Flags for which tests to run
      run-test-ios-unit:
        type: boolean
        default: false
      run-test-ios-functional:
        type: boolean
        default: false
      run-test-ios-integration:
        type: boolean
        default: false
      run-test-tvos-unit:
        type: boolean
        default: false
      run-test-tvos-functional:
        type: boolean
        default: false
      run-build-xcframework-and-app:
        type: boolean
        default: false

jobs:
  validate-code:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Setup Dependencies
        uses: timkimadobe/aepsdk-commons/.github/actions/ios-setup-dependencies-action@ios-circleci-to-github

      - name: Lint Source Code
        run: make lint

  # test-ios-unit:
  #   runs-on: macos-latest
  #   needs: validate-code
  #   if: inputs.run-test-ios-unit
  #   strategy:
  #     matrix:
  #       device: ${{ fromJson(inputs.ios-device-names) }}
  #       os: ${{ fromJson(inputs.ios-versions) }}

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4.2.2

  #     - name: Setup Dependencies
  #       uses: timkimadobe/aepsdk-commons/.github/actions/ios-setup-dependencies-action@ios-circleci-to-github

  #     - name: Run iOS Unit Tests
  #       run: make unit-test-ios IOS_DEVICE_NAME="${{ matrix.device }}" IOS_VERSION="${{ matrix.os }}"
  
  test-ios-unit2:
    needs: validate-code
    if: inputs.run-test-ios-unit
    uses: timkimadobe/aepsdk-commons/.github/workflows/ios-custom-command-build-and-test.yml@ios-circleci-to-github
    with:
      ios-device-names: ${{ inputs.ios-device-names }}
      ios-versions: ${{ inputs.ios-versions }}
      command: make unit-test-ios

  test-ios-functional:
    runs-on: macos-latest
    needs: validate-code
    if: inputs.run-test-ios-functional
    strategy:
      matrix:
        device: ${{ fromJson(inputs.ios-device-names) }}
        os: ${{ fromJson(inputs.ios-versions) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
      
      - name: Setup Dependencies
        uses: timkimadobe/aepsdk-commons/.github/actions/ios-setup-dependencies-action@ios-circleci-to-github

      - name: Run iOS Functional Tests
        run: make functional-test-ios IOS_DEVICE_NAME="${{ matrix.device }}" IOS_VERSION="${{ matrix.os }}"

  test-ios-integration:
    runs-on: macos-latest
    needs: validate-code
    if: inputs.run-test-ios-integration
    strategy:
      matrix:
        device: ${{ fromJson(inputs.ios-device-names) }}
        os: ${{ fromJson(inputs.ios-versions) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
      
      - name: Setup Dependencies
        uses: timkimadobe/aepsdk-commons/.github/actions/ios-setup-dependencies-action@ios-circleci-to-github

      - name: Run iOS Integration Tests
        run: make test-integration-upstream IOS_DEVICE_NAME="${{ matrix.device }}" IOS_VERSION="${{ matrix.os }}"

  test-tvos-unit:
    runs-on: macos-latest
    needs: validate-code
    if: inputs.run-test-tvos-unit
    strategy:
      matrix:
        device: ${{ fromJson(inputs.tvos-device-names) }}
        os: ${{ fromJson(inputs.tvos-versions) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
      
      - name: Setup Dependencies
        uses: timkimadobe/aepsdk-commons/.github/actions/ios-setup-dependencies-action@ios-circleci-to-github
      
      - name: Run tvOS Unit Tests
        run: make unit-test-tvos TVOS_DEVICE_NAME="${{ matrix.device }}" TVOS_VERSION="${{ matrix.os }}"

  test-tvos-functional:
    runs-on: macos-latest
    needs: validate-code
    if: inputs.run-test-tvos-functional
    strategy:
      matrix:
        device: ${{ fromJson(inputs.tvos-device-names) }}
        os: ${{ fromJson(inputs.tvos-versions) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
      
      - name: Setup Dependencies
        uses: timkimadobe/aepsdk-commons/.github/actions/ios-setup-dependencies-action@ios-circleci-to-github

      - name: Run tvOS Functional Tests
        run: make functional-test-tvos TVOS_DEVICE_NAME="${{ matrix.device }}" TVOS_VERSION="${{ matrix.os }}"

  build_xcframework_and_app:
    runs-on: macos-latest
    needs: validate-code
    if: inputs.run-build-xcframework-and-app

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
      
      - name: Setup Dependencies
        uses: timkimadobe/aepsdk-commons/.github/actions/ios-setup-dependencies-action@ios-circleci-to-github

      - name: Build XCFramework
        run: make archive

      - name: Build Test App
        run: make build-app
