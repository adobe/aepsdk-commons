#
# Copyright 2023 Adobe. All rights reserved.
# This file is licensed to you under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
# OF ANY KIND, either express or implied. See the License for the specific language
# governing permissions and limitations under the License.
#

name: BOM Update Dependencies

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: 
   workflow_dispatch:
   schedule:
     - cron: '00 00 * * 2,4'
     # At 00:00 on Tuesday and Thursday


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  update-bom:
    if: ${{ github.repository_owner == 'adobe' }}
    runs-on: ubuntu-24.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          ref: main

      - name: Check existing PRs
        run: |
          if gh pr list --repo https://github.com/adobe/aepsdk-commons --json title | grep '\[CI\] updating BOM to'; then
            gh run cancel ${{ github.run_id }}
            gh run watch ${{ github.run_id }}
          else
            echo "Not found existing PRs"
          fi
       
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v4.7.0
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Read bomVersion from gradle.properties
        id: read_bomVersion_before
        uses: christian-draeger/read-properties@908f99d3334be3802ec7cb528395a69d19914e7b # 1.1.1
        with:
          path: './android/aepsdk-bom/gradle.properties'
          properties: 'bomVersion'
          
      - name: Generate BOM release notes
        run: make -C android/aepsdk-bom generate-bom-release-notes

      - name: Bump up BOM version and update extension versions
        run: make -C android/aepsdk-bom bump-bom-version-and-update-bom-properties

      - name: Set env (BOM_VERSION)
        run: echo BOM_VERSION=$(grep "^bomVersion=" ./android/aepsdk-bom/gradle.properties | sed -e 's/.*=//') >> $GITHUB_ENV

      - name: Print the new BOM version
        run: echo ${{ env.BOM_VERSION }}

      - name: Generate POM file
        run: make -C android/aepsdk-bom generate-bom-pom

      - name: Print the new POM
        run: |
         sudo apt-get install libxml2-utils
         make -C android/aepsdk-bom print-bom-pom
        continue-on-error: true
        
      - name: Read bomVersion from gradle.properties
        id: read_bomVersion_after
        uses: christian-draeger/read-properties@908f99d3334be3802ec7cb528395a69d19914e7b # 1.1.1
        with:
          path: './android/aepsdk-bom/gradle.properties'
          properties: 'bomVersion'

      - name: BOM versions
        run: |
          echo before: ${{ steps.read_bomVersion_before.outputs.bomVersion }}
          echo after: ${{ steps.read_bomVersion_after.outputs.bomVersion }}
        
      - name: Check BOM version
        if:  ${{ steps.read_bomVersion_before.outputs.bomVersion == steps.read_bomVersion_after.outputs.bomVersion }}
        run: |
            gh run cancel ${{ github.run_id }}
            gh run watch ${{ github.run_id }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        continue-on-error: true # Ignore error if PR already exists
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="ci-bom-${{ env.BOM_VERSION }}-update"
          TITLE="[CI] updating BOM to ${{ env.BOM_VERSION }}"
          BODY="Updating BOM to ${{ env.BOM_VERSION }}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create branch and commit changes (if any)
          git checkout -b "$BRANCH"
          # Stage all modified files produced by previous steps
          git add -A

          # Commit only when there are changes
          if ! git diff --cached --quiet; then
            git commit -m "Updating BOM to ${{ env.BOM_VERSION }}"
          fi

          # Push branch (create or update)
          git push --set-upstream origin "$BRANCH" --force

          # Create PR (will fail gracefully if it already exists)
          gh pr create \
            --title "$TITLE" \
            --body "$BODY" \
            --head "$BRANCH" \
            --base main \
            --label "bom" \
            --label "automated pr" \
            --assignee "yangyansong-adbe" \
            --assignee "praveek" || true
