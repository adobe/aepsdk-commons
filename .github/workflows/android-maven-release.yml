#
# Copyright 2024 Adobe. All rights reserved.
# This file is licensed to you under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License. You may obtain a copy
# of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
# OF ANY KIND, either express or implied. See the License for the specific language
# governing permissions and limitations under the License.
#

name: Publish Release (Android)

on: 
  workflow_call:
    inputs:
      tag:
        description: 'The existing tag (version) to be released (ex: 5.0.1).'
        required: true
        type: string

      create-github-release:
        description: 'Create GitHub release with tag? ("false" to skip)'
        required: true
        type: string

      version_verify_dependencies:
        description: |
          A comma-separated list of dependencies with their versions to verify. 
          Each dependency can optionally specify the files where it applies using the `@` symbol.
          
          **Syntax:** `<name> <version>[@file1[,file2,...]]`

          - If the `@` syntax is used, the dependency will only apply to the specified files.
          - If the `@` symbol is omitted, the dependency applies to all relevant files.

          **Example:**
          `"AEPCore 7.8.9, AEPEdgeIdentity 8.9.10@code/gradle.properties"`

        required: false
        type: string
        default: ''

      version_verify_paths:
        description: |
          A comma-separated list of absolute or relative file paths to verify. 
          Each path can optionally specify a pattern type using the syntax:
          
          **Syntax:** `path[:file_type]`

          **Example:**
          `"code/edge/src/main/java/com/adobe/marketing/mobile/EdgeConstants.java, code/gradle.properties"`

          This argument is required.
          
        required: true
        type: string

      workflow_tag:
        description: 'The tag or ref of the reusable workflow being invoked (ex: gha-ios-1.0.0, gha-android-1.0.0).'
        type: string
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Set up Java
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v4.0.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      
      - name: Restore cached scripts from aepsdk-commons
        uses: ./.github/actions/cache-scripts
        with:
          workflow_tag: ${{ inputs.workflow_tag }}
      
      - name: Verify Versions
        run: |
          set -eo pipefail
          echo Release version: ${{ github.event.inputs.tag }}
          python3 ./.github/aepsdk-commons/scripts/versions.py \
            -v "${{ github.event.inputs.tag }}" \
            -p "${{ inputs.version_verify_paths }}" \
            -d "${{ inputs.version_verify_dependencies }}"

      - name: Remove scripts from aepsdk-commons
        run: rm -rf .github/aepsdk-commons

      - name: Create GH Release
        if: ${{ inputs.create-github-release == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ github.event.inputs.tag }} \
            --verify-tag \
            --generate-notes \
            --title "v${{ github.event.inputs.tag }}"

      - name: Import GPG key
        env:
          GPG_SECRET_KEYS: ${{ secrets.GPG_SECRET_KEYS }}
          GPG_OWNERTRUST: ${{ secrets.GPG_OWNERTRUST }}
        run: |
          echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch --yes
          echo $GPG_OWNERTRUST | base64 --decode | gpg --import-ownertrust --no-tty --batch --yes

      - name: Publish to Maven Central Repository
        run: make ci-publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}